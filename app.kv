#:kivy 1.1.1
#:import hex kivy.utils.get_color_from_hex
#:import dp kivy.metrics.dp

<MainScreen>:
    backgr_color: 0,0,0,1
    move_list_backgr_color: .25,.27,.27,1
    bl: bl
    canvas:
        Color:
            rgba: root.backgr_color
        Rectangle:
            size: self.size
            pos: self.pos
    MDBoxLayout:
        id: bl
        topbar: topbar
        orientation: "vertical"
        MDTopAppBar:
            id: topbar
            height: 35
            title: "Chess app"
            use_overflow: True
            right_action_items: [["home", lambda x: app.top_bar_callback('home/end_game'), "home"],["wrench", lambda x: app.top_bar_callback('settings'), "Settings"]]
            
        MDBoxLayout:
            height: self.parent.height-35
            board: board
            padding: [5,0,5,0]
            MDBoxLayout:
                orientation: "vertical"
                size_hint_y: None
                height: board.width
                pos_hint: {"center_y":0.5}
                size_hint_x: 0.25
                canvas.before:
                    Color:
                        rgba: root.move_list_backgr_color
                    RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [20,]
                MDLabel:
                    text:"Moves"
                    valign: "top"
                    halign: "left"
                    padding: [10,10,10,10]
                    size_hint_y: 0.075
                    text_size: (self.width - 20, self.height)
                MDScrollView:
                    size_hint_y: 0.8
                    padding: [20,0,20,30]
                    MovesList:
            ChessBoard:
                id:board
                padding:[30,0,10,0]
                width: 0.6*root.width if 0.6*root.width<=0.95*self.parent.height else 0.95*self.parent.height
            MDRelativeLayout:
                size_hint_y: 1
                size_hint_x: 0.25
                TopClock:
                    size_hint_y: .075
                    size_hint_x: .35
                    size_hint_max_x: root.width - self.x - 5
                    pos_hint: {"top": 1-((self.parent.parent.height-board.height)/2)/self.parent.parent.height}
                    text_size: (self.width - dp(32), None)
                    font_size: self.width / 6
                BottomClock:
                    size_hint_y: .075
                    size_hint_x: .35
                    size_hint_max_x: root.width - self.x - 5
                    pos_hint: {"top": ((self.parent.parent.height-board.height)/2+self.height)/self.parent.parent.height}
                    text_size: (self.width - dp(32), None)
                    font_size: self.width / 6

<TopClock>:
    text: '10:29'
    disabled: True
    background_color: hex("#ffffff")
    disabled_color: hex("#ffffff")
    background_disabled_normal: ""
    background_disabled_down: ""
    icon: "clock-outline"

<BottomClock>:
    text: '10:29'
    disabled: True
    background_color: hex("#ffffff")
    disabled_color: hex("#ffffff")
    background_disabled_normal: ""
    background_disabled_down: ""
    icon: "clock-outline"

<ChessBoardSquare>:
    background_normal: ""
    background_down: ""
    background_color: (0,0,0,0)
    border: [0,0,0,0]
    image:image
    on_press: self.pressAction()
    Image:
        id:image
        size:self.parent.size
        pos:self.parent.pos
        source:''

<ChessPromotionPiece>:
    background_normal: ""
    background_down: ""
    background_color: [1,1,1,0]
    border: [0,0,0,0]
    image:image
    on_press: self.pressAction()
    Image:
        id:image
        size:self.parent.size
        pos:self.parent.pos
        source:''
        fit_mode: 'contain'

<ChessPromotionUI>:
    rows: 3
    cols: 2
    ChessPromotionPiece:
        text: 'q'
    ChessPromotionPiece:
        text: 'r'
    ChessPromotionPiece:
        text: 'b'
    ChessPromotionPiece:
        text: 'n'
    Widget:
        Button:
            text: 'Cancel'
            pos: self.parent.pos
            height: self.parent.height
            width: self.parent.width * 2
            on_press: self.parent.parent.cancel()

<ChessBoard>:
    height: self.width
    size_hint: None, None
    pos_hint: {"center_y":0.5}

<MovesList>:

MainScreen: